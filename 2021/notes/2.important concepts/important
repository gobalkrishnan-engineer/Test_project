
# Note 1

* Everything you can place in variable is an object,
* Every object is an instance of a class.
* Even member functions and null are objects.
* With the exception of null (if you enable sound null safety)
* All objects inherits from the Object class.

# Note 2 

* Although Dart is strongly typed,
* annotations are optional because Dart can infer types.
* number is inferred to be of type int 

# Note 3

* If you enable "null safety", variables can't contain null unless you say they can
* You can make variable nullable by using (?), eg:  int? a; or int x = nullableButNotNullInt!

# Note 4 
 
* support explicity i.e for Object?


# Note 5

* Dart supports generic types, like List<int> and List<Object>

# Note 6 

* Dart supports top-level function (such as main())
* function tied to a class or object (static and instance methods) respectively.

# Note 7

* Dart supports top-level variables.
* variables tied to a class or object (static and instance variable) respectively.
* instance sometime known as field or properity

# Note 8

* Unlike java, Dart doesn't have the keywords "public","protected" and "private".
* If an identifier starts with an underscore(_), it's private to its library. 
* For details, see "library and visibility"

# Note 9

* identifier can start with a letter or underscore (_), followed by any combination of those characters plus digits.

# Note 10

* Dart has both expressions (which have runtime values) and statements (which don't).ie not statements.
* For example, the "conditional expression" condition ? expr1 : expr2 

# Note 11 

* Dart tool report 2 kinds of problems:
   1. warings  - indicate the code not work but program runs
   2. error    - compile time error (stop run programm ) or runtime error (throw exception)


















